<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tips on Halog</title>
    <link>https://haservi.github.io/categories/tips/</link>
    <description>Recent content in Tips on Halog</description>
    <image>
      <url>https://haservi.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://haservi.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 09 Aug 2022 22:32:07 +0900</lastBuildDate><atom:link href="https://haservi.github.io/categories/tips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenJDK 버전 쉽게 변경하기</title>
      <link>https://haservi.github.io/posts/tips/window-java-version-change/</link>
      <pubDate>Tue, 09 Aug 2022 22:32:07 +0900</pubDate>
      
      <guid>https://haservi.github.io/posts/tips/window-java-version-change/</guid>
      <description>Window에서 JDK 버전 쉽게 변경하기 Java를 사용하여 프로젝트를 진행하다 보면 우선적으로 OS 명령을 내리기 위한 JDK(Java Develop Kit) 설치가 필요합니다.
그렇지만 특정 Java 버전을 필요로 하는 프로젝트도 있습니다.
이를 해결하기 위해 도커로 환경을 구성하거나 해당 로컬 컴퓨터의 환경변수를 설정하여 변경하는 것도 가능합니다.
해당 글은 스크립트를 생성하여 터미널 명령어로 간단하게 자바 버전을 변경하는 방법입니다.
모든 설정이 끝나면 아래처럼 터미널에서 명령어만 입력하면 스크립트를 변경 할 수 있습니다.
JDK 설치 및 폴더명 변경 우선 JDK를 다운로드 아무래도 라이선스의 문제가 있을 수 있으니 OpenJDK를 다운받는 것을 추천드립니다.</description>
    </item>
    
    <item>
      <title>윈도우 Port 강제 종료 방법</title>
      <link>https://haservi.github.io/posts/tips/window-port-taskkill/</link>
      <pubDate>Mon, 23 May 2022 21:49:41 +0900</pubDate>
      
      <guid>https://haservi.github.io/posts/tips/window-port-taskkill/</guid>
      <description>종종 테스트 중 이전에 실행한 Port가 남아서 충돌나는 경우가 있습니다.
기존에 존재하는 Port의 PID를 제거하면 삭제할 수 있습니다.
Port 강제 종료 방법  먼저 windows + R 을 눌러 실행 스크립트를 열어주고 cmd를 입력하여 커맨드 창을 열어줍니다. 명령어로 netstat -a -o를 입력하면 현재 연결된 네트워크 상태를 볼 수 있습니다.  위와 같이 8080포트가 존재하면 우측에 있는 PID의 번호를 기억합니다. 여기서는 49480의 값입니다. taskkill /f /pid 49480을 입력하면 해당 8080포트를 제거할 수 있습니다.</description>
    </item>
    
    <item>
      <title>비쥬얼 스튜디오 코드에서 자동완성 해제하기</title>
      <link>https://haservi.github.io/posts/tips/visual-studio-code-auto-complete/</link>
      <pubDate>Sun, 03 Apr 2022 14:30:00 +0900</pubDate>
      
      <guid>https://haservi.github.io/posts/tips/visual-studio-code-auto-complete/</guid>
      <description>Visual Studio Code의 자동완성 기능 해제 방법 프로그램 실행 후 설정(Ctrl + , 또는 Command + ,)으로 들어간 후 검색항목에 intelliSense를 검색하면 여러 체크박스 리스트를 볼 수 있습니다.
위(Show Classes)에서부터 아래(Show Words)까지 전부 체크 해제를 하면 자동완성 기능이 비활성화 됩니다.
그렇지만 너무 많은 옵션이 있기 때문에 전부 클릭 해제하기가 귀찮은 경우 아래의 JSON으로 추가할 수 있습니다.
오른쪽 위의 설정으로 들어가서 아래의 값들을 복사 후 붙여 넣어주면 됩니다.
&amp;#34;explorer.compactFolders&amp;#34;: false, &amp;#34;explorer.confirmDragAndDrop&amp;#34;: false, &amp;#34;editor.</description>
    </item>
    
    <item>
      <title>Git Commit 메시지 규칙</title>
      <link>https://haservi.github.io/posts/tips/git-commit-message-rule/</link>
      <pubDate>Tue, 01 Mar 2022 22:54:30 +0900</pubDate>
      
      <guid>https://haservi.github.io/posts/tips/git-commit-message-rule/</guid>
      <description>Git Commit git commit message convetion은 회사 또는 프로젝트 마다 다를 수 있습니다.
message의 형태는 다를 수 있지만 기본적인 목적은 같습니다.
잘 만들어진 git 커밋 메시지는 해당 프로젝트에서 작업하는 팀원과 미래의 자신에게 변경 사항에 대한 의미를 전달하기 위한 좋은 방법입니다.
일반적으로 커밋 메시지는 다음과 같은 구조를 권장합니다.
type: Subject body footer 보통 위와 같은 형태입니다.
제목은 새로운 기능 추가인 경우 feat: Subject, Feat: Subject, Feat Subject, Feature Subject 등 조금씩 type의 형태가 다르지만 그건 프로젝트에 따라 일관되게 맞추면 됩니다.</description>
    </item>
    
    <item>
      <title>git CRLF 개행 문자 차이 해결 방법</title>
      <link>https://haservi.github.io/posts/tips/git-crlf/</link>
      <pubDate>Mon, 21 Feb 2022 21:50:28 +0900</pubDate>
      
      <guid>https://haservi.github.io/posts/tips/git-crlf/</guid>
      <description>Windows는 line ending으로 CR(Carriage-Return, \r)과 LF(Line Feed \n)을 사용합니다. CRLF는 커서를 다음 라인의 맨앞으로 옮기는 표시이며, ↲ 이러한 표현입니다.
Mac, Linux(Unix 계열)의 경우 LF(Line Feed \n)를 사용합니다. LF는 현재 위치에서 바로 아래로 이동하는 것을 의미하며, ↓ 와 같은 표현입니다.
문제는 같은 작업 영역에서 같은 코드를 수정할 경우 windows와 mac의 코드가 일치하더라도 커서의 표현값이 다르기 때문에 충돌이 일어나는 경우가 발생합니다.
해결 방법으로는 각 운영체제별로 git을 기준으로 LF로 맞춰주는 것입니다.
Windows는 CRLF를 LF로 변경되도록 git config 설정 중 core.</description>
    </item>
    
    <item>
      <title>Github 저장소 안의 폴더 다운로드 받는 방법</title>
      <link>https://haservi.github.io/posts/tips/git-inner-folder-download/</link>
      <pubDate>Sun, 28 Nov 2021 21:30:06 +0900</pubDate>
      
      <guid>https://haservi.github.io/posts/tips/git-inner-folder-download/</guid>
      <description>기본적으로 웹상에서는 Git 저장소 안의 폴더를 다운받으려면 해당 저장소 전부를 다운 받은 후에 특정 폴더의 정보를 봐야 합니다.
간단한 방법은 아래의 링크에서 다운로드 받는게 제일 쉬운방법이지만 터미널에서 다운로드 방법도 한번 다루어보겠습니다. 터미널로 다운 받은 경우 이후 해당 소스가 변경이 있다면 당겨올 수 있는 이점도 있습니다.
해결방법 웹 다운로드 https://downgit.github.io/#/home 해당 사이트에 github 저장소 특정 폴더의 링크를 복사 한 후 붙여넣고 Download 버튼 클릭
터미널 다운로드 기본적으로 git이 설치돼 있어야합니다.
예제로 https://github.</description>
    </item>
    
  </channel>
</rss>
